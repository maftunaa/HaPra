$date
  Fri Nov 05 20:40:02 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module rca_tb $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # cout $end
$var reg 8 $ sum[7:0] $end
$scope module g $end
$var reg 8 % a[7:0] $end
$var reg 8 & b[7:0] $end
$var reg 1 ' cout $end
$var reg 8 ( sum[7:0] $end
$var reg 1 ) wire_1 $end
$var reg 1 * wire_2 $end
$var reg 1 + wire_3 $end
$var reg 1 , wire_4 $end
$var reg 1 - wire_5 $end
$var reg 1 . wire_6 $end
$var reg 1 / wire_7 $end
$scope module add0 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 cout $end
$var reg 1 4 sum $end
$var reg 1 5 wire_1 $end
$var reg 1 6 wire_2 $end
$var reg 1 7 wire_3 $end
$upscope $end
$scope module add1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : cin $end
$var reg 1 ; cout $end
$var reg 1 < sum $end
$var reg 1 = wire_1 $end
$var reg 1 > wire_2 $end
$var reg 1 ? wire_3 $end
$upscope $end
$scope module add2 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B cin $end
$var reg 1 C cout $end
$var reg 1 D sum $end
$var reg 1 E wire_1 $end
$var reg 1 F wire_2 $end
$var reg 1 G wire_3 $end
$upscope $end
$scope module add3 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J cin $end
$var reg 1 K cout $end
$var reg 1 L sum $end
$var reg 1 M wire_1 $end
$var reg 1 N wire_2 $end
$var reg 1 O wire_3 $end
$upscope $end
$scope module add4 $end
$var reg 1 P a $end
$var reg 1 Q b $end
$var reg 1 R cin $end
$var reg 1 S cout $end
$var reg 1 T sum $end
$var reg 1 U wire_1 $end
$var reg 1 V wire_2 $end
$var reg 1 W wire_3 $end
$upscope $end
$scope module add5 $end
$var reg 1 X a $end
$var reg 1 Y b $end
$var reg 1 Z cin $end
$var reg 1 [ cout $end
$var reg 1 \ sum $end
$var reg 1 ] wire_1 $end
$var reg 1 ^ wire_2 $end
$var reg 1 _ wire_3 $end
$upscope $end
$scope module add6 $end
$var reg 1 ` a $end
$var reg 1 a b $end
$var reg 1 b cin $end
$var reg 1 c cout $end
$var reg 1 d sum $end
$var reg 1 e wire_1 $end
$var reg 1 f wire_2 $end
$var reg 1 g wire_3 $end
$upscope $end
$scope module add7 $end
$var reg 1 h a $end
$var reg 1 i b $end
$var reg 1 j cin $end
$var reg 1 k cout $end
$var reg 1 l sum $end
$var reg 1 m wire_1 $end
$var reg 1 n wire_2 $end
$var reg 1 o wire_3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b10101010 !
b01010101 "
0#
b11111111 $
b10101010 %
b01010101 &
0'
b11111111 (
0)
0*
0+
0,
0-
0.
0/
00
11
02
03
14
15
06
07
18
09
0:
0;
1<
1=
0>
0?
0@
1A
0B
0C
1D
1E
0F
0G
1H
0I
0J
0K
1L
1M
0N
0O
0P
1Q
0R
0S
1T
1U
0V
0W
1X
0Y
0Z
0[
1\
1]
0^
0_
0`
1a
0b
0c
1d
1e
0f
0g
1h
0i
0j
0k
1l
1m
0n
0o
#1000000
b11001100 !
b11110000 "
1#
b10111100 $
b11001100 %
b11110000 &
1'
b10111100 (
1/
01
04
05
08
0<
0=
1@
0A
0X
1Y
1`
1c
0d
0e
1f
1i
1j
1k
1l
0m
1n
#2000000
b11010111 !
b01011010 "
1#
b00110001 $
b11010111 %
b01011010 &
1'
b00110001 (
1*
1+
1,
1-
10
14
15
18
19
1;
1>
1B
1C
0D
1G
0H
1I
1J
1K
0L
1O
1P
1R
1S
1T
0U
1V
0Y
1Z
1\
0]
0i
1k
0l
1m
0n
1o
#3000000
