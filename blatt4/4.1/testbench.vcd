$date
  Thu Nov 11 21:12:49 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mux81_tb $end
$var reg 3 ! i1[2:0] $end
$var reg 3 " i2[2:0] $end
$var reg 3 # i3[2:0] $end
$var reg 3 $ i4[2:0] $end
$var reg 3 % i5[2:0] $end
$var reg 3 & i6[2:0] $end
$var reg 3 ' i7[2:0] $end
$var reg 3 ( i8[2:0] $end
$var reg 3 ) y[2:0] $end
$var reg 3 * sel_81[2:0] $end
$scope module multiplex $end
$var reg 3 + i1_81[2:0] $end
$var reg 3 , i2_81[2:0] $end
$var reg 3 - i3_81[2:0] $end
$var reg 3 . i4_81[2:0] $end
$var reg 3 / i5_81[2:0] $end
$var reg 3 0 i6_81[2:0] $end
$var reg 3 1 i7_81[2:0] $end
$var reg 3 2 i8_81[2:0] $end
$var reg 3 3 sel_81[2:0] $end
$var reg 3 4 y_81[2:0] $end
$var reg 2 5 sel81[1:0] $end
$var reg 3 6 m1[2:0] $end
$var reg 3 7 m2[2:0] $end
$var reg 3 8 m3[2:0] $end
$var reg 3 9 out_or[2:0] $end
$scope module sel81_assignment(0) $end
$upscope $end
$scope module sel81_assignment(1) $end
$upscope $end
$scope module mux1 $end
$var reg 3 : i1[2:0] $end
$var reg 3 ; i2[2:0] $end
$var reg 3 < i3[2:0] $end
$var reg 3 = i4[2:0] $end
$var reg 2 > sel[1:0] $end
$var reg 3 ? y[2:0] $end
$var reg 2 @ not_sel[1:0] $end
$var reg 3 A and1[2:0] $end
$var reg 3 B and2[2:0] $end
$var reg 3 C and3[2:0] $end
$var reg 3 D and4[2:0] $end
$var reg 3 E out_or[2:0] $end
$scope module not_gate_assignment(0) $end
$scope module not_output1 $end
$var reg 1 F input1 $end
$var reg 1 G not_result $end
$var reg 1 H not_gate $end
$upscope $end
$upscope $end
$scope module not_gate_assignment(1) $end
$scope module not_output1 $end
$var reg 1 I input1 $end
$var reg 1 J not_result $end
$var reg 1 K not_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 L input1 $end
$var reg 1 M input2 $end
$var reg 1 N input3 $end
$var reg 1 O and_result $end
$var reg 1 P and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 Q input1 $end
$var reg 1 R input2 $end
$var reg 1 S input3 $end
$var reg 1 T and_result $end
$var reg 1 U and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 V input1 $end
$var reg 1 W input2 $end
$var reg 1 X input3 $end
$var reg 1 Y and_result $end
$var reg 1 Z and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 [ input1 $end
$var reg 1 \ input2 $end
$var reg 1 ] input3 $end
$var reg 1 ^ and_result $end
$var reg 1 _ and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 ` input1 $end
$var reg 1 a input2 $end
$var reg 1 b input3 $end
$var reg 1 c and_result $end
$var reg 1 d and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 e input1 $end
$var reg 1 f input2 $end
$var reg 1 g input3 $end
$var reg 1 h and_result $end
$var reg 1 i and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 j input1 $end
$var reg 1 k input2 $end
$var reg 1 l input3 $end
$var reg 1 m and_result $end
$var reg 1 n and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 o input1 $end
$var reg 1 p input2 $end
$var reg 1 q input3 $end
$var reg 1 r and_result $end
$var reg 1 s and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 t input1 $end
$var reg 1 u input2 $end
$var reg 1 v input3 $end
$var reg 1 w and_result $end
$var reg 1 x and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 y input1 $end
$var reg 1 z input2 $end
$var reg 1 { input3 $end
$var reg 1 | and_result $end
$var reg 1 } and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 !" input1 $end
$var reg 1 "" input2 $end
$var reg 1 #" input3 $end
$var reg 1 $" and_result $end
$var reg 1 %" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 &" input1 $end
$var reg 1 '" input2 $end
$var reg 1 (" input3 $end
$var reg 1 )" and_result $end
$var reg 1 *" and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output1 $end
$var reg 1 +" input1 $end
$var reg 1 ," input2 $end
$var reg 1 -" input3 $end
$var reg 1 ." input4 $end
$var reg 1 /" or_result $end
$var reg 1 0" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output1 $end
$var reg 1 1" input1 $end
$var reg 1 2" input2 $end
$var reg 1 3" input3 $end
$var reg 1 4" input4 $end
$var reg 1 5" or_result $end
$var reg 1 6" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output1 $end
$var reg 1 7" input1 $end
$var reg 1 8" input2 $end
$var reg 1 9" input3 $end
$var reg 1 :" input4 $end
$var reg 1 ;" or_result $end
$var reg 1 <" or_gate $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux2 $end
$var reg 3 =" i1[2:0] $end
$var reg 3 >" i2[2:0] $end
$var reg 3 ?" i3[2:0] $end
$var reg 3 @" i4[2:0] $end
$var reg 2 A" sel[1:0] $end
$var reg 3 B" y[2:0] $end
$var reg 2 C" not_sel[1:0] $end
$var reg 3 D" and1[2:0] $end
$var reg 3 E" and2[2:0] $end
$var reg 3 F" and3[2:0] $end
$var reg 3 G" and4[2:0] $end
$var reg 3 H" out_or[2:0] $end
$scope module not_gate_assignment(0) $end
$scope module not_output1 $end
$var reg 1 I" input1 $end
$var reg 1 J" not_result $end
$var reg 1 K" not_gate $end
$upscope $end
$upscope $end
$scope module not_gate_assignment(1) $end
$scope module not_output1 $end
$var reg 1 L" input1 $end
$var reg 1 M" not_result $end
$var reg 1 N" not_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 O" input1 $end
$var reg 1 P" input2 $end
$var reg 1 Q" input3 $end
$var reg 1 R" and_result $end
$var reg 1 S" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 T" input1 $end
$var reg 1 U" input2 $end
$var reg 1 V" input3 $end
$var reg 1 W" and_result $end
$var reg 1 X" and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 Y" input1 $end
$var reg 1 Z" input2 $end
$var reg 1 [" input3 $end
$var reg 1 \" and_result $end
$var reg 1 ]" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 ^" input1 $end
$var reg 1 _" input2 $end
$var reg 1 `" input3 $end
$var reg 1 a" and_result $end
$var reg 1 b" and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 c" input1 $end
$var reg 1 d" input2 $end
$var reg 1 e" input3 $end
$var reg 1 f" and_result $end
$var reg 1 g" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 h" input1 $end
$var reg 1 i" input2 $end
$var reg 1 j" input3 $end
$var reg 1 k" and_result $end
$var reg 1 l" and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 m" input1 $end
$var reg 1 n" input2 $end
$var reg 1 o" input3 $end
$var reg 1 p" and_result $end
$var reg 1 q" and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 r" input1 $end
$var reg 1 s" input2 $end
$var reg 1 t" input3 $end
$var reg 1 u" and_result $end
$var reg 1 v" and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 w" input1 $end
$var reg 1 x" input2 $end
$var reg 1 y" input3 $end
$var reg 1 z" and_result $end
$var reg 1 {" and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 |" input1 $end
$var reg 1 }" input2 $end
$var reg 1 !# input3 $end
$var reg 1 "# and_result $end
$var reg 1 ## and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 $# input1 $end
$var reg 1 %# input2 $end
$var reg 1 &# input3 $end
$var reg 1 '# and_result $end
$var reg 1 (# and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 )# input1 $end
$var reg 1 *# input2 $end
$var reg 1 +# input3 $end
$var reg 1 ,# and_result $end
$var reg 1 -# and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output1 $end
$var reg 1 .# input1 $end
$var reg 1 /# input2 $end
$var reg 1 0# input3 $end
$var reg 1 1# input4 $end
$var reg 1 2# or_result $end
$var reg 1 3# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output1 $end
$var reg 1 4# input1 $end
$var reg 1 5# input2 $end
$var reg 1 6# input3 $end
$var reg 1 7# input4 $end
$var reg 1 8# or_result $end
$var reg 1 9# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output1 $end
$var reg 1 :# input1 $end
$var reg 1 ;# input2 $end
$var reg 1 <# input3 $end
$var reg 1 =# input4 $end
$var reg 1 ># or_result $end
$var reg 1 ?# or_gate $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux3 $end
$var reg 3 @# i1[2:0] $end
$var reg 3 A# i2[2:0] $end
$var reg 1 B# sel $end
$var reg 3 C# y[2:0] $end
$var reg 3 D# and1[2:0] $end
$var reg 3 E# and2[2:0] $end
$var reg 3 F# out_or[2:0] $end
$var reg 1 G# not_sel $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 H# input1 $end
$var reg 1 I# input2 $end
$var reg 1 J# and_result $end
$var reg 1 K# and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 L# input1 $end
$var reg 1 M# input2 $end
$var reg 1 N# and_result $end
$var reg 1 O# and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 P# input1 $end
$var reg 1 Q# input2 $end
$var reg 1 R# and_result $end
$var reg 1 S# and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 T# input1 $end
$var reg 1 U# input2 $end
$var reg 1 V# and_result $end
$var reg 1 W# and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 X# input1 $end
$var reg 1 Y# input2 $end
$var reg 1 Z# and_result $end
$var reg 1 [# and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 \# input1 $end
$var reg 1 ]# input2 $end
$var reg 1 ^# and_result $end
$var reg 1 _# and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output1 $end
$var reg 1 `# input1 $end
$var reg 1 a# input2 $end
$var reg 1 b# or_result $end
$var reg 1 c# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output1 $end
$var reg 1 d# input1 $end
$var reg 1 e# input2 $end
$var reg 1 f# or_result $end
$var reg 1 g# or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output1 $end
$var reg 1 h# input1 $end
$var reg 1 i# input2 $end
$var reg 1 j# or_result $end
$var reg 1 k# or_gate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b001 "
b010 #
b011 $
b100 %
b101 &
b110 '
b111 (
b000 )
b000 *
b000 +
b001 ,
b010 -
b011 .
b100 /
b101 0
b110 1
b111 2
b000 3
b000 4
b00 5
b000 6
b100 7
b000 8
bUUU 9
b000 :
b001 ;
b010 <
b011 =
b00 >
b000 ?
b11 @
b000 A
b000 B
b000 C
b000 D
b000 E
0F
1G
1H
0I
1J
1K
1L
1M
0N
0O
0P
0Q
1R
1S
0T
0U
1V
0W
0X
0Y
0Z
0[
0\
1]
0^
0_
1`
1a
0b
0c
0d
0e
1f
0g
0h
0i
1j
0k
1l
0m
0n
0o
0p
1q
0r
0s
1t
1u
0v
0w
0x
0y
1z
0{
0|
0}
1!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
b100 ="
b101 >"
b110 ?"
b111 @"
b00 A"
b100 B"
b11 C"
b100 D"
b000 E"
b000 F"
b000 G"
b100 H"
0I"
1J"
1K"
0L"
1M"
1N"
1O"
1P"
0Q"
0R"
0S"
0T"
1U"
1V"
0W"
0X"
1Y"
0Z"
0["
0\"
0]"
0^"
0_"
1`"
0a"
0b"
1c"
1d"
0e"
0f"
0g"
0h"
1i"
0j"
0k"
0l"
1m"
0n"
1o"
0p"
0q"
0r"
0s"
1t"
0u"
0v"
1w"
1x"
1y"
1z"
1{"
0|"
1}"
1!#
0"#
0##
1$#
0%#
1&#
0'#
0(#
0)#
0*#
1+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
1:#
0;#
0<#
0=#
1>#
1?#
b000 @#
b100 A#
0B#
b000 C#
b000 D#
b000 E#
b000 F#
1G#
1H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
1P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
1X#
0Y#
0Z#
0[#
0\#
1]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
#10000000
b010 )
b010 *
b010 3
b010 4
b10 5
b010 6
b110 7
b010 8
b10 >
b010 ?
b01 @
b010 C
b010 E
1I
0J
0K
0M
0R
1W
1\
0a
0f
1k
1m
1n
1p
0u
0z
1""
1'"
13"
15"
16"
b10 A"
b110 B"
b01 C"
b000 D"
b110 F"
b110 H"
1L"
0M"
0N"
0P"
0U"
1Z"
1_"
0d"
0i"
1n"
1p"
1q"
1s"
0x"
0z"
0{"
0}"
1%#
1'#
1(#
1*#
16#
18#
19#
0:#
1<#
b010 @#
b110 A#
b010 C#
b010 D#
b010 F#
1Q#
1R#
1S#
1U#
1d#
1f#
1g#
#20000000
b001 )
b001 *
b001 3
b001 4
b01 5
b001 6
b101 7
b001 8
b01 >
b001 ?
b10 @
b001 B
b000 C
b001 E
1F
0G
0H
0I
1J
1K
0L
1M
1Q
1R
1T
1U
0V
0W
1[
0\
0`
1a
1e
1f
0j
0k
0m
0n
1o
0p
0t
1u
1y
1z
0!"
0""
1&"
0'"
1,"
1/"
10"
03"
05"
06"
b01 A"
b101 B"
b10 C"
b101 E"
b000 F"
b101 H"
1I"
0J"
0K"
0L"
1M"
1N"
0O"
1P"
1T"
1U"
1W"
1X"
0Y"
0Z"
1^"
0_"
0c"
1d"
1h"
1i"
0m"
0n"
0p"
0q"
1r"
0s"
0w"
1x"
1|"
1}"
1"#
1##
0$#
0%#
0'#
0(#
1)#
0*#
1/#
12#
13#
06#
08#
09#
1;#
0<#
1>#
1?#
b001 @#
b101 A#
b001 C#
b001 D#
b001 F#
1I#
1J#
1K#
1M#
0Q#
0R#
0S#
0U#
1]#
1`#
1b#
1c#
0d#
0f#
0g#
#30000000
b011 )
b011 *
b011 3
b011 4
b11 5
b011 6
b111 7
b011 8
b11 >
b011 ?
b00 @
b000 B
b011 D
b011 E
1I
0J
0K
0M
0R
0T
0U
1W
1\
1^
1_
0a
0f
1k
1p
1r
1s
0u
0z
1""
1'"
0,"
1."
14"
15"
16"
b11 A"
b111 B"
b00 C"
b000 E"
b111 G"
b111 H"
1L"
0M"
0N"
0P"
0U"
0W"
0X"
1Z"
1_"
1a"
1b"
0d"
0i"
1n"
1s"
1u"
1v"
0x"
0}"
0"#
0##
1%#
1*#
1,#
1-#
0/#
11#
17#
18#
19#
0;#
1=#
b011 @#
b111 A#
b011 C#
b011 D#
b011 F#
1Q#
1R#
1S#
1U#
1d#
1f#
1g#
#40000000
b100 )
b100 *
b100 3
b100 4
b00 5
b000 6
b100 7
b100 8
b00 >
b000 ?
b11 @
b000 D
b000 E
0F
1G
1H
0I
1J
1K
1L
1M
0Q
1R
1V
0W
0[
0\
0^
0_
1`
1a
0e
1f
1j
0k
0o
0p
0r
0s
1t
1u
0y
1z
1!"
0""
0&"
0'"
0."
0/"
00"
04"
05"
06"
b00 A"
b100 B"
b11 C"
b100 D"
b000 G"
b100 H"
0I"
1J"
1K"
0L"
1M"
1N"
1O"
1P"
0T"
1U"
1Y"
0Z"
0^"
0_"
0a"
0b"
1c"
1d"
0h"
1i"
1m"
0n"
0r"
0s"
0u"
0v"
1w"
1x"
1z"
1{"
0|"
1}"
1$#
0%#
0)#
0*#
0,#
0-#
01#
02#
03#
07#
08#
09#
1:#
0=#
1>#
1?#
b000 @#
b100 A#
1B#
b100 C#
b000 D#
b100 E#
b100 F#
0G#
0H#
0I#
0J#
0K#
1L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
1T#
0U#
0V#
0W#
0X#
1\#
1]#
1^#
1_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
1i#
1j#
1k#
#50000000
b110 )
b110 *
b110 3
b110 4
b10 5
b010 6
b110 7
b110 8
b10 >
b010 ?
b01 @
b010 C
b010 E
1I
0J
0K
0M
0R
1W
1\
0a
0f
1k
1m
1n
1p
0u
0z
1""
1'"
13"
15"
16"
b10 A"
b110 B"
b01 C"
b000 D"
b110 F"
b110 H"
1L"
0M"
0N"
0P"
0U"
1Z"
1_"
0d"
0i"
1n"
1p"
1q"
1s"
0x"
0z"
0{"
0}"
1%#
1'#
1(#
1*#
16#
18#
19#
0:#
1<#
b010 @#
b110 A#
b110 C#
b110 E#
b110 F#
1Q#
1U#
1V#
1W#
1e#
1f#
1g#
#60000000
b101 )
b101 *
b101 3
b101 4
b01 5
b001 6
b101 7
b101 8
b01 >
b001 ?
b10 @
b001 B
b000 C
b001 E
1F
0G
0H
0I
1J
1K
0L
1M
1Q
1R
1T
1U
0V
0W
1[
0\
0`
1a
1e
1f
0j
0k
0m
0n
1o
0p
0t
1u
1y
1z
0!"
0""
1&"
0'"
1,"
1/"
10"
03"
05"
06"
b01 A"
b101 B"
b10 C"
b101 E"
b000 F"
b101 H"
1I"
0J"
0K"
0L"
1M"
1N"
0O"
1P"
1T"
1U"
1W"
1X"
0Y"
0Z"
1^"
0_"
0c"
1d"
1h"
1i"
0m"
0n"
0p"
0q"
1r"
0s"
0w"
1x"
1|"
1}"
1"#
1##
0$#
0%#
0'#
0(#
1)#
0*#
1/#
12#
13#
06#
08#
09#
1;#
0<#
1>#
1?#
b001 @#
b101 A#
b101 C#
b101 E#
b101 F#
1I#
1M#
1N#
1O#
0Q#
0U#
0V#
0W#
1]#
1^#
1_#
1a#
1b#
1c#
0e#
0f#
0g#
1i#
1j#
1k#
#70000000
b111 )
b111 *
b111 3
b111 4
b11 5
b011 6
b111 7
b111 8
b11 >
b011 ?
b00 @
b000 B
b011 D
b011 E
1I
0J
0K
0M
0R
0T
0U
1W
1\
1^
1_
0a
0f
1k
1p
1r
1s
0u
0z
1""
1'"
0,"
1."
14"
15"
16"
b11 A"
b111 B"
b00 C"
b000 E"
b111 G"
b111 H"
1L"
0M"
0N"
0P"
0U"
0W"
0X"
1Z"
1_"
1a"
1b"
0d"
0i"
1n"
1s"
1u"
1v"
0x"
0}"
0"#
0##
1%#
1*#
1,#
1-#
0/#
11#
17#
18#
19#
0;#
1=#
b011 @#
b111 A#
b111 C#
b111 E#
b111 F#
1Q#
1U#
1V#
1W#
1e#
1f#
1g#
#80000000
