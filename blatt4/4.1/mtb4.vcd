$date
  Thu Nov 11 19:16:41 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mux41_tb $end
$var reg 3 ! i1[2:0] $end
$var reg 3 " i2[2:0] $end
$var reg 3 # i3[2:0] $end
$var reg 3 $ i4[2:0] $end
$var reg 3 % y[2:0] $end
$var reg 2 & sel[1:0] $end
$scope module multiplex $end
$var reg 3 ' i1[2:0] $end
$var reg 3 ( i2[2:0] $end
$var reg 3 ) i3[2:0] $end
$var reg 3 * i4[2:0] $end
$var reg 2 + sel[1:0] $end
$var reg 3 , y[2:0] $end
$var reg 2 - not_sel[1:0] $end
$var reg 3 . and1[2:0] $end
$var reg 3 / and2[2:0] $end
$var reg 3 0 and3[2:0] $end
$var reg 3 1 and4[2:0] $end
$var reg 3 2 out_or[2:0] $end
$scope module not_gate_assignment(0) $end
$scope module not_output1 $end
$var reg 1 3 input1 $end
$var reg 1 4 not_result $end
$var reg 1 5 not_gate $end
$upscope $end
$upscope $end
$scope module not_gate_assignment(1) $end
$scope module not_output1 $end
$var reg 1 6 input1 $end
$var reg 1 7 not_result $end
$var reg 1 8 not_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(0) $end
$scope module and_output1 $end
$var reg 1 9 input1 $end
$var reg 1 : input2 $end
$var reg 1 ; input3 $end
$var reg 1 < and_result $end
$var reg 1 = and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 > input1 $end
$var reg 1 ? input2 $end
$var reg 1 @ input3 $end
$var reg 1 A and_result $end
$var reg 1 B and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 C input1 $end
$var reg 1 D input2 $end
$var reg 1 E input3 $end
$var reg 1 F and_result $end
$var reg 1 G and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 H input1 $end
$var reg 1 I input2 $end
$var reg 1 J input3 $end
$var reg 1 K and_result $end
$var reg 1 L and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output1 $end
$var reg 1 M input1 $end
$var reg 1 N input2 $end
$var reg 1 O input3 $end
$var reg 1 P and_result $end
$var reg 1 Q and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 R input1 $end
$var reg 1 S input2 $end
$var reg 1 T input3 $end
$var reg 1 U and_result $end
$var reg 1 V and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 W input1 $end
$var reg 1 X input2 $end
$var reg 1 Y input3 $end
$var reg 1 Z and_result $end
$var reg 1 [ and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 \ input1 $end
$var reg 1 ] input2 $end
$var reg 1 ^ input3 $end
$var reg 1 _ and_result $end
$var reg 1 ` and_gate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output1 $end
$var reg 1 a input1 $end
$var reg 1 b input2 $end
$var reg 1 c input3 $end
$var reg 1 d and_result $end
$var reg 1 e and_gate $end
$upscope $end
$scope module and_output2 $end
$var reg 1 f input1 $end
$var reg 1 g input2 $end
$var reg 1 h input3 $end
$var reg 1 i and_result $end
$var reg 1 j and_gate $end
$upscope $end
$scope module and_output3 $end
$var reg 1 k input1 $end
$var reg 1 l input2 $end
$var reg 1 m input3 $end
$var reg 1 n and_result $end
$var reg 1 o and_gate $end
$upscope $end
$scope module and_output4 $end
$var reg 1 p input1 $end
$var reg 1 q input2 $end
$var reg 1 r input3 $end
$var reg 1 s and_result $end
$var reg 1 t and_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output1 $end
$var reg 1 u input1 $end
$var reg 1 v input2 $end
$var reg 1 w input3 $end
$var reg 1 x input4 $end
$var reg 1 y or_result $end
$var reg 1 z or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output1 $end
$var reg 1 { input1 $end
$var reg 1 | input2 $end
$var reg 1 } input3 $end
$var reg 1 !" input4 $end
$var reg 1 "" or_result $end
$var reg 1 #" or_gate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output1 $end
$var reg 1 $" input1 $end
$var reg 1 %" input2 $end
$var reg 1 &" input3 $end
$var reg 1 '" input4 $end
$var reg 1 (" or_result $end
$var reg 1 )" or_gate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b001 "
b010 #
b011 $
b000 %
b00 &
b000 '
b001 (
b010 )
b011 *
b00 +
b000 ,
b11 -
b000 .
b000 /
b000 0
b000 1
b000 2
03
14
15
06
17
18
19
1:
0;
0<
0=
0>
1?
1@
0A
0B
1C
0D
0E
0F
0G
0H
0I
1J
0K
0L
1M
1N
0O
0P
0Q
0R
1S
0T
0U
0V
1W
0X
1Y
0Z
0[
0\
0]
1^
0_
0`
1a
1b
0c
0d
0e
0f
1g
0h
0i
0j
1k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
#10000000
b001 %
b01 &
b01 +
b001 ,
b10 -
b001 /
b001 2
13
04
05
09
1>
1A
1B
0C
1H
0M
1R
0W
1\
0a
1f
0k
1p
1v
1y
1z
#20000000
b010 %
b10 &
b10 +
b010 ,
b01 -
b000 /
b010 0
b010 2
03
14
15
16
07
08
19
0:
0>
0?
0A
0B
1C
1D
0H
1I
1M
0N
0R
0S
1W
1X
1Z
1[
0\
1]
1a
0b
0f
0g
1k
1l
0p
1q
0v
0y
0z
1}
1""
1#"
#30000000
b011 %
b11 &
b11 +
b011 ,
b00 -
b000 0
b011 1
b011 2
13
04
05
09
1>
0C
1H
1K
1L
0M
1R
0W
0Z
0[
1\
1_
1`
0a
1f
0k
1p
1x
1y
1z
0}
1!"
#40000000
