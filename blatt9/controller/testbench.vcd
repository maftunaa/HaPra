$date
  Fri Jan 21 14:35:18 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module controller_tb $end
$var reg 6 ! op[5:0] $end
$var reg 6 " funct[5:0] $end
$var reg 1 # zero $end
$var reg 1 $ memtoreg $end
$var reg 1 % memwrite $end
$var reg 1 & pcsrc $end
$var reg 1 ' alusrc $end
$var reg 1 ( regdst $end
$var reg 1 ) regwrite $end
$var reg 1 * jump $end
$var reg 3 + alucontrol[2:0] $end
$scope module uut $end
$var reg 6 , op[5:0] $end
$var reg 6 - funct[5:0] $end
$var reg 1 . zero $end
$var reg 1 / memtoreg $end
$var reg 1 0 memwrite $end
$var reg 1 1 pcsrc $end
$var reg 1 2 alusrc $end
$var reg 1 3 regdst $end
$var reg 1 4 regwrite $end
$var reg 1 5 jump $end
$var reg 3 6 alucontrol[2:0] $end
$var reg 2 7 aluop[1:0] $end
$var reg 1 8 branch $end
$scope module md $end
$var reg 6 9 op[5:0] $end
$var reg 1 : memtoreg $end
$var reg 1 ; memwrite $end
$var reg 1 < branch $end
$var reg 1 = alusrc $end
$var reg 1 > regdst $end
$var reg 1 ? regwrite $end
$var reg 1 @ jump $end
$var reg 2 A aluop[1:0] $end
$var reg 9 B controls[8:0] $end
$upscope $end
$scope module ad $end
$var reg 6 C funct[5:0] $end
$var reg 2 D aluop[1:0] $end
$var reg 3 E alucontrol[2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000000 !
b100000 "
0#
0$
0%
0&
0'
1(
1)
0*
b010 +
b000000 ,
b100000 -
0.
0/
00
01
02
13
14
05
b010 6
b10 7
08
b000000 9
0:
0;
0<
0=
1>
1?
0@
b10 A
b110000010 B
b100000 C
b10 D
b010 E
#10000000
1#
1.
#20000000
b100011 !
0#
1$
1'
0(
b100011 ,
0.
1/
12
03
b00 7
b100011 9
1:
1=
0>
b00 A
b101001000 B
b00 D
#30000000
1#
1.
#40000000
#50000000
b100100 "
0#
b100100 -
0.
b100100 C
#60000000
1#
1.
#70000000
